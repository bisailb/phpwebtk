.TH "phpwebtk" 3 "Sat Nov 12 2016" "PHP Web Toolkit 1.0.4 Alpha (phpwebtk)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
phpwebtk \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
$Id$ PHP Web Toolkit Version 1\&.0\&.4 Alpha
.PP
class \fBClient\fP
.PP
This class is responsible for building a \fBRequest\fP object and sending the \fBRequest\fP object to the front controller for processing\&. The front controller then gives the response back to the end user\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBCommand\fP
.PP
This class declares an interface for executing an operation\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBConfigDao\fP
.PP
This class declares an interface for a type of Data Access Object (DAO)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBController\fP
.PP
This class serves as a single entry point for handling all requests in the system\&. The front controller is responsible for delegating processes to various handlers while minimizing the coupling among these components by implementing flexible request handling mechanisms, and managing the choice of the next view to present to the end user\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBConvert\fP
.PP
This class provides some common data conversion functions\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
conversion
.PP
class \fBCrypt\fP
.PP
This class provides a simple interface to the mcrypt library\&. It can be used to encrypt and decrypt data\&. mcrypt was chosen because it supports a wide variety of block algorithms and cipher modes\&. For a complete list of supported algorithms and modes refer to the documentation of mcrypt\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
cryptography
.PP
class \fBDaoFactory\fP
.PP
This class declares an interface for operations that create abstract Data Access Objects (DAOs)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBDigest\fP
.PP
This class provides a simple interface to the mhash library\&. It can be used to create both salted and unsalted message digests\&. mhash was chosen because it supports a wide variety of hash algorithms\&. For a complete list of supported hashes, refer to the documentation of mhash\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
cryptography
.PP
class \fBHash\fP
.PP
This class provides a simple interface to the mhash library\&. mhash was chosen because it supports a wide variety of hash algorithms\&. For a complete list of supported hashes, refer to the documentation of mhash\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
cryptography
.PP
class \fBHmac\fP
.PP
The \fBHmac\fP class provides a simple interface to the mhash library\&. It can be invoked to create both salted and unsalted hashed message authentication codes (HMAC)\&. mhash was chosen because it supports a wide variety of hash algorithms\&. For a complete list of supported algorithms, refer to the documentation of mhash\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
cryptography
.PP
class \fBHttpRequestBuilder\fP
.PP
This class constructs the parts of the \fBRequest\fP by implementing the \fBRequestBuilder\fP interface, defines and keeps track of the representation it creates and provides an interface for retrieving the \fBRequest\fP object\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
$Id$ PHP Web Toolkit Version 1\&.0\&.2 Alpha
.PP
class \fBHttpRequestHandler\fP
.PP
This class handles requests it is responsible for and can access its successor\&. If this class can handle the request, it does so; otherwise it it forwards the request to its successor\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
textprocessing
.PP
class \fBInvoker\fP
.PP
This class asks the command to carry out the request\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBKsesRequestHandler\fP
.PP
This class handles requests it is responsible for and can access its successor\&. If this class can handle the request, it does so; otherwise it forwards the request to its successor\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
textprocessing
.PP
class \fBMysqlDaoFactory\fP
.PP
This class implements the \fBDaoFactory\fP's operations that create concrete MySQL Data Access Objects (DAOs)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBMysqliDaoFactory\fP
.PP
This class implements the \fBDaoFactory\fP's operations that create concrete MySQL Data Access Objects (DAOs)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBMysqliSampleDao\fP
.PP
This class defines a Data Access Object to be created by the corresponding \fBMysqliDaoFactory\fP and implements the \fBSampleDao\fP interface\&.
.PP
This class contains all MySQL specific code and SQL statements\&. The implementation details are hidden from the end user\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBMysqlSampleDao\fP
.PP
This class defines a Data Access Object to be created by the corresponding \fBMysqlDaoFactory\fP and implements the \fBSampleDao\fP interface\&.
.PP
This class contains all MySQL specific code and SQL statements\&. The implementation details are hidden from the end user\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBMysqltDaoFactory\fP
.PP
This class implements the \fBDaoFactory\fP's operations that create concrete MySQL Data Access Objects (DAOs)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBMysqltSampleDao\fP
.PP
This class defines a Data Access Object to be created by the corresponding \fBMysqltDaoFactory\fP and implements the \fBSampleDao\fP interface\&.
.PP
This class contains all MySQL specific code and SQL statements\&. The implementation details are hidden from the end user\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBPException\fP
.PP
This class is responsible for exception handling and inherits from the internal Exception class\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
debugging
.PP
class \fBPostgres7DaoFactory\fP
.PP
This class implements the \fBDaoFactory\fP's operations that create concrete PostgreSQL Data Access Objects (DAOs)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBPostgres8DaoFactory\fP
.PP
This class implements the \fBDaoFactory\fP's operations that create concrete PostgreSQL Data Access Objects (DAOs)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBPrng\fP
.PP
This class provides a simple interface to two character devices, the rand() function and the mt_rand() function\&. The /dev/random character device is suitable for use when very high quality randomness is desired\&. The /dev/urandom character device will result in randomness that is merely cryptographically strong\&. The main difference between the two is that /dev/random is blocking and /dev/urandom is non-blocking\&. The rand() function uses the libc random number generator\&. However, mt_rand() is a drop-in replacement for rand() that uses a random number generator with known characteristics using the Mersenne Twister, that will produce randomnumbers four times faster than what the average libc rand() provides\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
mathematics
.PP
class \fBRequest\fP
.PP
This class represents the complex \fBRequest\fP object under construction\&. The \fBRequestBuilder\fP builds the \fBRequest\fP object's internal representation and defines the process by which it's assembled\&. This class includes classes that define the constituent parts, includng interfaces for assembling the parts into the final result\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBRequestBuilder\fP
.PP
This class specifies an abstract interface for creating parts of a \fBRequest\fP object\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBRequestDirector\fP
.PP
This class constructs a \fBRequest\fP object using the \fBRequestBuilder\fP interface\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
abstract class \fBRequestHandler\fP
.PP
This class defines an interface for handling the requests and optionally implements the successor link\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
textprocessing
.PP
class \fBSampleDao\fP
.PP
Declares an interface for a type of Data Access Object (DAO)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBSampleView\fP
.PP
This class represents and displays information to the end user\&. The information that is used in a dynamic display is retrieved from a model\&. Handlers support views by encapsulating and adapting a model for use in a display\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
templates
.PP
class \fBSession\fP
.PP
This class enables data to be preserved across subsequent requests invoked by the end user\&.
.PP
Additional measures must be taken to actively protect the integrity of a session\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
usermanagement
.PP
$Id$ PHP Web Toolkit Version 1\&.0\&.3 Alpha
.PP
class \fBSlashesRequestHandler\fP
.PP
This class handles requests it is responsible for and can access its successor\&. If this class can handle the request, it does so; otherwise it forwards the request to its successor\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
textprocessing
.PP
class StreamIO
.PP
This class provides stream input and output operations and supports buffering for write operations\&. PHP will search for a protocol handler (also known as a wrapper) for schemes in the form of 'scheme://\&.\&.\&.' unless URL-aware fopen wrappers and other wrappers are disabled\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
filesandfolders
.PP
class \fBView\fP
.PP
This class knows how to perform the operation(s) associated with carrying out the request\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBViewCommand\fP
.PP
This class defines a binding between a \fBView\fP object and an action, and implements Execute by invoking the corresponding operation(s) on the \fBView\fP\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
http
.PP
class \fBXmlConfigDao\fP
.PP
This class defines a Data Access Object (DAO) to be created by the corresponding \fBXmlDaoFactory\fP and implements the \fBConfigDao\fP interface\&.
.PP
This class contains all XML specific code and XPath statements\&. implementation details are hidden from the end user\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases
.PP
class \fBXmlDaoFactory\fP
.PP
This class implements the DAO Factory's operations that create concrete XML Data Access Objects (DAOs)\&.
.PP
\fBAuthor:\fP
.RS 4
Brian Bisaillon bisailb@myprivacy.ca 
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (C) 2004-2016 by Brian Bisaillon
.RE
.PP
databases 
.SH "Author"
.PP 
Generated automatically by Doxygen for PHP Web Toolkit 1\&.0\&.4 Alpha (phpwebtk) from the source code\&.
